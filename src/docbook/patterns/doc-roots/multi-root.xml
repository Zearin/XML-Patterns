<?xml version='1.0' encoding='UTF-8'?>
<section
	xmlns="http://docbook.org/ns/docbook" 
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink" 
	
	version="5.0"
	xreflabel="Multi Root Document Types"
	role="pattern">
	
	<info>
		<title>Multi Root Document Types</title>
		
		<abstract>
			<para>A single document type with multiple root elements is used to handle varying
				documents that may exist within a system.</para>
		</abstract>
	</info>
	
	
	<section>
		<title>Problem</title>
		<para>A system needs to handle varying types of documents. These are somehow related, yet
			each type of document needs a unique identity provided by a document root.</para>
	</section>

	<section>
		<title>Context</title>
		<para>Systems where varying types of documents need to be processed, but the different
			documents are closely related.</para>
	</section>

	<section>
		<title>Forces</title>
		<para>Maintainability of the system is effected by how the document types are
			organized.</para>
	</section>

	<section>
		<title>Solution</title>
		<para>Create a single declaration with multiple root elements for the different document
			types.</para>
	</section>

	<section>
		<title>Examples</title>

		<para>The two documents below show two different bank transactions, a deposit and a
			withdrawal. The document have different root elements, but many other common elements.
			Both of these documents use the same DTD, but declare different roots.</para>

		<programlisting language="xml"><![CDATA[
<!DOCTYPE "Deposit" SYSTEM "bank.dtd">
<Deposit>
	<Account id="123"/>
	<Amount currency="USD">100.00</Amount>
	<Date>05-10-2000</Date>
</Deposit>
		]]></programlisting>

		<programlisting language="xml"><![CDATA[
<!DOCTYPE "Withdrawal" SYSTEM "bank.dtd">
<Withdrawal>
	<Account id="123"/>
	<Amount currency="USD">100.00</Amount>
	<Date>05-10-2000</Date>
</Withdrawal>
		]]></programlisting>
			
	</section>

	<section>
		<title>Discussion</title>
		<para>Allows the different document types to easily share structure. Having all of the
			related document types declared in a single file can increase maintainability. However,
			if revisions need to be made to the different document types separately, it might be
			better having separate declarations.</para>
	</section>

	<section>
		<title>Related Patterns</title>
	    <para><xref xl:href="universal-root.xml" /> and <xref xl:href="multi-doc-types.xml" /> are alternatives.</para>
	</section>

	<section>
		<title>Known Uses</title>
		<para>In DocBook the root element can be a <tag class="element">set</tag> or a <tag class="element">book</tag> element.</para>
	</section>
</section>

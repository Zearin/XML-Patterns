<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section
	xmlns="http://docbook.org/ns/docbook" 
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink" 
	version="5.0"
	
	role="pattern">
	
	<info>
		<title>Content Type Label</title>

		<abstract>
			<para>Parameter entities are created to represent different types of values within a
				DTD.</para>
		</abstract>
	</info>

	<section>
		<title>Problem</title>
		<para>DTDs provide limited type information for content of attributes and elements. Type
			information is often useful to have in a language.</para>
	</section>

	<section>
		<title>Context</title>
		<para>Any time DTDs are used and it is useful to convey type information.</para>
	</section>

	<section>
		<title>Forces</title>
		<para>Expressing type information helps in creating understandable and maintainable
			DTDs.</para>
	</section>

	<section>
		<title>Solution</title>
		<para>Create parameter entities to represent different data types. These parameters can be
			used in attribute and element content descriptions.</para>
	</section>

	<section>
		<title>Examples</title>

		<para>The following DTD fragment is taken from a payroll system. The first line defines a
			parameter entity to represent a employee number type. In each place in the DTD where a
			employee number is needed as content, this parameter entity is used.</para>

		<literallayout language="dtd">
&lt;!ENTITY % EmployeeNum &quot;NMTOKEN&quot;&gt;

&lt;!ELEMENT Order (LineItem*)&gt;

&lt;!ELEMENT Employee (Name, Address)&gt;
&lt;!ATTLIST Employee Number %EmployeeNum;&gt;

&lt;!ELEMENT PayRecord (Period, Hours)&gt;
&lt;!ATTLIST PayRecord Employee %EmployeeNum;&gt;
</literallayout>
	</section>



	<section>
		<title>Discussion</title>

		<para>This pattern does not change the structure or constraints of the documents that are
			instances of the DTD, but it does make the DTD easier to understand and maintain.</para>
		<para>This pattern increases understandability of the DTD by documenting the intended use of
			the content types to readers of the DTD. Looking at the above example we can see that it
			becomes obvious that the Employee&apos;s Number attribute and the PayRecord&apos;s
			Employee attribute contain the same type of value. If they were both just NMTOKENs this
			may not have been as obvious.</para>
		<para>Maintainability of DTDs is increased by allowing all related content types to be
			changed from a single place. For instance, in the Examples section above if the company
			this payroll system was created for merges with another company, and the employee
			numbers from the new company can contain a space, the &quot;NMTOKEN&quot; attribute type
			is no longer valid. By changing the EmployeeNum parameter entity to &quot;CDATA&quot;,
			all references to the employee number in the DTD can be changed.</para>
	</section>

	<section>
		<title>Related Patterns</title>
		<para>This is an example of a <link xl:href="/patterns/organization/flyweight.xml">Flyweight</link>.</para>
	</section>

	<section>
		<title>Known Uses</title>

		<para>XHTML uses Content Type Labels extensively. For example:</para>

		<literallayout language="xml">
&lt;!ENTITY % URI &quot;CDATA&quot;&gt;
&lt;!-- a Uniform Resource Identifier, see [RFC2396] --&gt;

&lt;!ENTITY % FrameTarget &quot;NMTOKEN&quot;&gt;
&lt;!-- render in this frame --&gt;

&lt;!-- document base URI --&gt;

&lt;!ELEMENT base EMPTY&gt;
&lt;!ATTLIST base
href        %URI;          #IMPLIED
target      %FrameTarget;  #IMPLIED
&gt;
</literallayout>
		<para>The above excepts shows how Content Type Labels are used to make it clearer what is
			expected in the attributes of the base element.</para>
	</section>

	<section>
		<title>References</title>
		<para>The document XML Modularization of HTML 4.0 by Murray Altheim explains the use of this
			pattern in XHTML.</para>
	</section>
</section>
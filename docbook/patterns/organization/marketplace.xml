<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section
	xmlns="http://docbook.org/ns/docbook" 
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink" 
	version="5.0"
	
	role="pattern">
	
	<info>
		<title>Marketplace</title>

		<abstract>
			<para>Instead of organizing objects in a hierarchical fashion, objects are organized in a
				linear way, with signs on each object to indicate its classifications.</para>
		</abstract>
	</info>


	<section>
		<title>Problem</title>

		<para>A natural way to use mark up to classify objects is to use a container for each new
			type in the classification.</para>

		<literallayout language="xml">
&lt;Employees&gt;
&lt;Managers&gt;
&lt;Person type=&quot;salaried&quot;&gt;
Riff Raff
&lt;/Person&gt;
&lt;Person type=&quot;contractor&quot;&gt;
Frank Furter
&lt;/Person&gt;
&lt;/Managers&gt;
&lt;Workers&gt;
&lt;Person type=&quot;salaried&quot;&gt;
Brad Majors
&lt;/Person&gt;
&lt;Person type=&quot;contractor&quot;&gt;
Janet Weiss
&lt;/Person&gt;
&lt;/Workers&gt;
&lt;/Employees&gt;
</literallayout>

		<para>This can lead to problems, if processing software needs to find all of the employees,
			or just the salaried employees, it needs to iterate through two different lists, the
			managers and the workers.</para>
	</section>

	<section>
		<title>Context</title>
		<para>Any place where data can be organized by more than one type.</para>
	</section>

	<section>
		<title>Forces</title>
		<para>Ease-of-processing can be greatly affected by the way that elements are organized.
			Ease-of-Authoring can also be a problem, pick one structural organization can lead to
			awkward groupings of elements, and the choice of structure may seem arbitrary.</para>
	</section>

	<section>
		<title>Solution</title>
		<para>The objects to be modeled can all be grouped at the same level, and the categorization
			can be done with attributes on the element. This allows multiple characteristics of the
			objects to be modeled without enforcing a possibly artificial hiearchy on the
			objects.</para>
	</section>

	<section>
		<title>Examples</title>

		<para>The following model can be contrasted to the sample in the problem section, which uses
			a tree structure to model employees. Each employee can have two different types, whether
			they are Salaried or Contractors and whether they are Workers or Managers. In the tree
			structure, one of the types, the Worker/Manager distinction is given more importance
			than the Salaried/Contractor. Extra effort would be required to extract just the
			Salaried employees.</para>
		<para>The sample below uses the Marketplace pattern to organize the same data into a flatter
			structure. In this organization both types are given equal precedence, and both types
			are equally easy to process.</para>


		<literallayout language="xml">
&lt;Employees&gt;
&lt;Person type=&quot;salaried&quot; level=&quot;manager&quot;&gt;
Riff Raff
&lt;/Person&gt;
&lt;Person type=&quot;contractor&quot; level=&quot;manager&quot;&gt;
Frank Furter
&lt;/Person&gt;
&lt;Person type=&quot;salaried&quot; level=&quot;worker&quot;&gt;
Brad
&lt;/Person&gt;
&lt;Person type=&quot;contractor&quot; level=&quot;worker&quot;&gt;
Janet
&lt;/Person&gt;
&lt;/Employees&gt;
</literallayout>
	</section>

	<section>
		<title>Discussion</title>
		<para>This pattern results in a organization that can make mapping to database tables
			easier. The elements in the Marketplace are equivalent to rows in a table, while the
			attributes are the columns. A more hierarchical structure can be harder to map to
			databases.</para>
	</section>

	<section>
		<title>Related Patterns</title>
		<para>The Marketplace is often contained in a Collection Element.</para>
	</section>

	<section>
		<title>Known Uses</title>
		<para>â€¦</para>
	</section>

	<section>
		<title>References</title>
		<para>See:The Microsoft whitepaper Serializing Graphs of Data in XML for a discussion of
			representing graph structure such as RDBMS tables in XML.</para>
	</section>
</section>